// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sum.proto

package sum

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TestSumReq struct {
	Number1              int64    `protobuf:"varint,1,opt,name=number1,proto3" json:"number1,omitempty"`
	Number2              int64    `protobuf:"varint,2,opt,name=number2,proto3" json:"number2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestSumReq) Reset()         { *m = TestSumReq{} }
func (m *TestSumReq) String() string { return proto.CompactTextString(m) }
func (*TestSumReq) ProtoMessage()    {}
func (*TestSumReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_62743f9cdc99b9fd, []int{0}
}

func (m *TestSumReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestSumReq.Unmarshal(m, b)
}
func (m *TestSumReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestSumReq.Marshal(b, m, deterministic)
}
func (m *TestSumReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestSumReq.Merge(m, src)
}
func (m *TestSumReq) XXX_Size() int {
	return xxx_messageInfo_TestSumReq.Size(m)
}
func (m *TestSumReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TestSumReq.DiscardUnknown(m)
}

var xxx_messageInfo_TestSumReq proto.InternalMessageInfo

func (m *TestSumReq) GetNumber1() int64 {
	if m != nil {
		return m.Number1
	}
	return 0
}

func (m *TestSumReq) GetNumber2() int64 {
	if m != nil {
		return m.Number2
	}
	return 0
}

type TestSumRes struct {
	Number               int64    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestSumRes) Reset()         { *m = TestSumRes{} }
func (m *TestSumRes) String() string { return proto.CompactTextString(m) }
func (*TestSumRes) ProtoMessage()    {}
func (*TestSumRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_62743f9cdc99b9fd, []int{1}
}

func (m *TestSumRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestSumRes.Unmarshal(m, b)
}
func (m *TestSumRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestSumRes.Marshal(b, m, deterministic)
}
func (m *TestSumRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestSumRes.Merge(m, src)
}
func (m *TestSumRes) XXX_Size() int {
	return xxx_messageInfo_TestSumRes.Size(m)
}
func (m *TestSumRes) XXX_DiscardUnknown() {
	xxx_messageInfo_TestSumRes.DiscardUnknown(m)
}

var xxx_messageInfo_TestSumRes proto.InternalMessageInfo

func (m *TestSumRes) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func init() {
	proto.RegisterType((*TestSumReq)(nil), "TestSumReq")
	proto.RegisterType((*TestSumRes)(nil), "TestSumRes")
}

func init() { proto.RegisterFile("sum.proto", fileDescriptor_62743f9cdc99b9fd) }

var fileDescriptor_62743f9cdc99b9fd = []byte{
	// 121 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2c, 0x2e, 0xcd, 0xd5,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x72, 0xe0, 0xe2, 0x0a, 0x49, 0x2d, 0x2e, 0x09, 0x2e, 0xcd,
	0x0d, 0x4a, 0x2d, 0x14, 0x92, 0xe0, 0x62, 0xcf, 0x2b, 0xcd, 0x4d, 0x4a, 0x2d, 0x32, 0x94, 0x60,
	0x54, 0x60, 0xd4, 0x60, 0x0e, 0x82, 0x71, 0x11, 0x32, 0x46, 0x12, 0x4c, 0xc8, 0x32, 0x46, 0x4a,
	0x2a, 0x48, 0x26, 0x14, 0x0b, 0x89, 0x71, 0xb1, 0x41, 0x24, 0xa0, 0x06, 0x40, 0x79, 0x46, 0x3a,
	0x5c, 0xcc, 0xc5, 0xa5, 0xb9, 0x42, 0xaa, 0x5c, 0xec, 0x50, 0xc5, 0x42, 0xdc, 0x7a, 0x08, 0x8b,
	0xa5, 0x90, 0x38, 0xc5, 0x4a, 0x0c, 0x49, 0x6c, 0x60, 0xc7, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff,
	0xff, 0xb5, 0x87, 0x44, 0x79, 0xa9, 0x00, 0x00, 0x00,
}
