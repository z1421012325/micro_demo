// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sub.proto

package sub

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TestSubReq struct {
	Number1              int64    `protobuf:"varint,1,opt,name=number1,proto3" json:"number1,omitempty"`
	Number2              int64    `protobuf:"varint,2,opt,name=number2,proto3" json:"number2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestSubReq) Reset()         { *m = TestSubReq{} }
func (m *TestSubReq) String() string { return proto.CompactTextString(m) }
func (*TestSubReq) ProtoMessage()    {}
func (*TestSubReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_168c8107357a6d2a, []int{0}
}

func (m *TestSubReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestSubReq.Unmarshal(m, b)
}
func (m *TestSubReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestSubReq.Marshal(b, m, deterministic)
}
func (m *TestSubReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestSubReq.Merge(m, src)
}
func (m *TestSubReq) XXX_Size() int {
	return xxx_messageInfo_TestSubReq.Size(m)
}
func (m *TestSubReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TestSubReq.DiscardUnknown(m)
}

var xxx_messageInfo_TestSubReq proto.InternalMessageInfo

func (m *TestSubReq) GetNumber1() int64 {
	if m != nil {
		return m.Number1
	}
	return 0
}

func (m *TestSubReq) GetNumber2() int64 {
	if m != nil {
		return m.Number2
	}
	return 0
}

type TestSubRes struct {
	Number               int64    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestSubRes) Reset()         { *m = TestSubRes{} }
func (m *TestSubRes) String() string { return proto.CompactTextString(m) }
func (*TestSubRes) ProtoMessage()    {}
func (*TestSubRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_168c8107357a6d2a, []int{1}
}

func (m *TestSubRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestSubRes.Unmarshal(m, b)
}
func (m *TestSubRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestSubRes.Marshal(b, m, deterministic)
}
func (m *TestSubRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestSubRes.Merge(m, src)
}
func (m *TestSubRes) XXX_Size() int {
	return xxx_messageInfo_TestSubRes.Size(m)
}
func (m *TestSubRes) XXX_DiscardUnknown() {
	xxx_messageInfo_TestSubRes.DiscardUnknown(m)
}

var xxx_messageInfo_TestSubRes proto.InternalMessageInfo

func (m *TestSubRes) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func init() {
	proto.RegisterType((*TestSubReq)(nil), "TestSubReq")
	proto.RegisterType((*TestSubRes)(nil), "TestSubRes")
}

func init() { proto.RegisterFile("sub.proto", fileDescriptor_168c8107357a6d2a) }

var fileDescriptor_168c8107357a6d2a = []byte{
	// 121 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2c, 0x2e, 0x4d, 0xd2,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x72, 0xe0, 0xe2, 0x0a, 0x49, 0x2d, 0x2e, 0x09, 0x2e, 0x4d,
	0x0a, 0x4a, 0x2d, 0x14, 0x92, 0xe0, 0x62, 0xcf, 0x2b, 0xcd, 0x4d, 0x4a, 0x2d, 0x32, 0x94, 0x60,
	0x54, 0x60, 0xd4, 0x60, 0x0e, 0x82, 0x71, 0x11, 0x32, 0x46, 0x12, 0x4c, 0xc8, 0x32, 0x46, 0x4a,
	0x2a, 0x48, 0x26, 0x14, 0x0b, 0x89, 0x71, 0xb1, 0x41, 0x24, 0xa0, 0x06, 0x40, 0x79, 0x46, 0x3a,
	0x5c, 0xcc, 0xc5, 0xa5, 0x49, 0x42, 0xaa, 0x5c, 0xec, 0x50, 0xc5, 0x42, 0xdc, 0x7a, 0x08, 0x8b,
	0xa5, 0x90, 0x38, 0xc5, 0x4a, 0x0c, 0x49, 0x6c, 0x60, 0xc7, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff,
	0xff, 0xaf, 0x02, 0x44, 0xe7, 0xa9, 0x00, 0x00, 0x00,
}
