// Code generated by protoc-gen-go. DO NOT EDIT.
// source: merge.proto

package merge

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TestMergeReq struct {
	Number1              int64    `protobuf:"varint,1,opt,name=number1,proto3" json:"number1,omitempty"`
	Number2              int64    `protobuf:"varint,2,opt,name=number2,proto3" json:"number2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestMergeReq) Reset()         { *m = TestMergeReq{} }
func (m *TestMergeReq) String() string { return proto.CompactTextString(m) }
func (*TestMergeReq) ProtoMessage()    {}
func (*TestMergeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_82caea6f5430298b, []int{0}
}

func (m *TestMergeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestMergeReq.Unmarshal(m, b)
}
func (m *TestMergeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestMergeReq.Marshal(b, m, deterministic)
}
func (m *TestMergeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestMergeReq.Merge(m, src)
}
func (m *TestMergeReq) XXX_Size() int {
	return xxx_messageInfo_TestMergeReq.Size(m)
}
func (m *TestMergeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TestMergeReq.DiscardUnknown(m)
}

var xxx_messageInfo_TestMergeReq proto.InternalMessageInfo

func (m *TestMergeReq) GetNumber1() int64 {
	if m != nil {
		return m.Number1
	}
	return 0
}

func (m *TestMergeReq) GetNumber2() int64 {
	if m != nil {
		return m.Number2
	}
	return 0
}

type TestMergeRes struct {
	Number               int64    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestMergeRes) Reset()         { *m = TestMergeRes{} }
func (m *TestMergeRes) String() string { return proto.CompactTextString(m) }
func (*TestMergeRes) ProtoMessage()    {}
func (*TestMergeRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_82caea6f5430298b, []int{1}
}

func (m *TestMergeRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestMergeRes.Unmarshal(m, b)
}
func (m *TestMergeRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestMergeRes.Marshal(b, m, deterministic)
}
func (m *TestMergeRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestMergeRes.Merge(m, src)
}
func (m *TestMergeRes) XXX_Size() int {
	return xxx_messageInfo_TestMergeRes.Size(m)
}
func (m *TestMergeRes) XXX_DiscardUnknown() {
	xxx_messageInfo_TestMergeRes.DiscardUnknown(m)
}

var xxx_messageInfo_TestMergeRes proto.InternalMessageInfo

func (m *TestMergeRes) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func init() {
	proto.RegisterType((*TestMergeReq)(nil), "TestMergeReq")
	proto.RegisterType((*TestMergeRes)(nil), "TestMergeRes")
}

func init() { proto.RegisterFile("merge.proto", fileDescriptor_82caea6f5430298b) }

var fileDescriptor_82caea6f5430298b = []byte{
	// 122 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0x4d, 0x2d, 0x4a,
	0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x72, 0xe2, 0xe2, 0x09, 0x49, 0x2d, 0x2e, 0xf1,
	0x05, 0x09, 0x05, 0xa5, 0x16, 0x0a, 0x49, 0x70, 0xb1, 0xe7, 0x95, 0xe6, 0x26, 0xa5, 0x16, 0x19,
	0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x30, 0x07, 0xc1, 0xb8, 0x08, 0x19, 0x23, 0x09, 0x26, 0x64, 0x19,
	0x23, 0x25, 0x35, 0x14, 0x33, 0x8a, 0x85, 0xc4, 0xb8, 0xd8, 0x20, 0x52, 0x50, 0x23, 0xa0, 0x3c,
	0x23, 0x13, 0x2e, 0x56, 0xb0, 0xd5, 0x42, 0xda, 0x5c, 0x9c, 0x70, 0x0d, 0x42, 0xbc, 0x7a, 0xc8,
	0x0e, 0x90, 0x42, 0xe1, 0x16, 0x2b, 0x31, 0x24, 0xb1, 0x81, 0x1d, 0x6a, 0x0c, 0x08, 0x00, 0x00,
	0xff, 0xff, 0x72, 0xb6, 0x4b, 0x28, 0xb7, 0x00, 0x00, 0x00,
}
